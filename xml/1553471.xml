<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: Generative Programming and DSLs for Safe Performance Critical Systems</AwardTitle>
    <AwardEffectiveDate>04/15/2016</AwardEffectiveDate>
    <AwardExpirationDate>03/31/2021</AwardExpirationDate>
    <AwardAmount>98977</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Anindya Banerjee</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Most performance critical software is developed using very low-level techniques, close to the underlying hardware. But low-level code in unsafe languages attracts security vulnerabilities, developer productivity suffers without the software engineering benefits of higher-level languages, and in the age of heterogeneous hardware and big data workloads, a single hand-optimized codebase may no longer provide good performance across different target platforms. Generative programming is a radical rethinking of the role of high-level languages and low-level languages. Instead of running whole systems in a high-level managed language runtime, the idea is to focus the abstraction power of high-level languages on composing pieces of low-level code, making runtime code generation and domain-specific optimization a fundamental part of the program logic. This project will conduct a fundamental study of generative design patterns, which will be extracted from existing and emerging program generators and domain-specific languages. The intellectual merits are a deeper understanding of how to develop software in a generative style. The project's broader significance and importance are to establish generative programming as a part of every performance-minded programmer?s toolbox, enabling the use of high-level programming in more situations than currently possible.&lt;br/&gt;&lt;br/&gt;Generative programming, and the shift in perspective that goes along with it, has been shown to be extremely effective in areas like databases (query compilation), protocol and data format parsers, hardware circuit generation, signal processing kernels, machine learning, and big data processing on heterogeneous computing devices?traditional strongholds of low-level languages. But while the general idea of program generation is well understood, the technique has remained esoteric?a black art, accessible only to the most skilled and daring of programmers. What is missing is a discipline of practical generative programming, including design patterns, best practices and so on. To achieve these broader goals, the project includes an education program, which, driven by the project?s research, will teach generative programming to a wide audience of students and developers in industry. This education effort will also serve as a large-scale usability study, closing the feedback loop into the research on generative programming techniques.</AbstractNarration>
    <MinAmdLetterDate>04/13/2016</MinAmdLetterDate>
    <MaxAmdLetterDate>04/13/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1553471</AwardID>
    <Investigator>
      <FirstName>Tiark</FirstName>
      <LastName>Rompf</LastName>
      <EmailAddress>tiark@purdue.edu</EmailAddress>
      <StartDate>04/13/2016</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Purdue University</Name>
      <CityName>West Lafayette</CityName>
      <ZipCode>479072114</ZipCode>
      <PhoneNumber>7654941055</PhoneNumber>
      <StreetAddress>Young Hall</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Indiana</StateName>
      <StateCode>IN</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7943</Code>
      <Text>PROGRAMMING LANGUAGES</Text>
    </ProgramReference>
  </Award>
</rootTag>
