<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>XPS: EXPL: Enabling An Ecosystem of Parallel Programming Abstractions</AwardTitle>
    <AwardEffectiveDate>09/01/2016</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2019</AwardExpirationDate>
    <AwardAmount>311821</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Anindya Banerjee</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>All modern computers, from smart phones to supercomputers, have multiple processing units. Since writing programs that effectively use these resources is notoriously difficult, many programming languages, displaying a wide variety of linguistic abstractions, have been created. The "right" set of abstractions depends on many factors, ranging from the nature of the application at hand, the sophistication of the programmer, and the degree of performance desired and effort required to achieve it. For this research, the intellectual merits are in the creation of tools and language specifications that support an ecosystem of parallel programming language abstractions. These are to be developed by independent parties and safely and automatically imported into a programmer's compiler so that programmers can pick and choose the language features that they feel best meet their needs. The project's broader significance and importance are in a transformative methodology and supporting tools for writing parallel programs, one which dramatically simplifies the development of new parallel programming and domain-specific language features because it allows researchers to focus their efforts on the design and implementation of new abstractions. By making it easier for programmers to use and experiment with new features, distributed as composeable language extensions, they can write performant and correct parallel programs with less effort.&lt;br/&gt;&lt;br/&gt;The proposed approach will use a specification of the C programming language based on context free grammars (for specifying concrete syntax) and attribute grammars (for specifying semantic analysis, optimization, and code generation). This defines the host language into which parallel programming language extensions are imported. Language extensions are also specified in these formalisms as they easily compose with the host language and other extensions. Modular analyses of the language extensions ensure that the composition of the programmer's chosen extensions will be successful and result in a working compiler that will not terminate abnormally. Of interest is the degree to which new and existing language abstractions can be realized in this composable approach to language extension.</AbstractNarration>
    <MinAmdLetterDate>07/11/2016</MinAmdLetterDate>
    <MaxAmdLetterDate>02/17/2017</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1628929</AwardID>
    <Investigator>
      <FirstName>Eric</FirstName>
      <LastName>Van Wyk</LastName>
      <EmailAddress>evw@umn.edu</EmailAddress>
      <StartDate>07/11/2016</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Minnesota-Twin Cities</Name>
      <CityName>Minneapolis</CityName>
      <ZipCode>554552070</ZipCode>
      <PhoneNumber>6126245599</PhoneNumber>
      <StreetAddress>200 OAK ST SE</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Minnesota</StateName>
      <StateCode>MN</StateCode>
    </Institution>
    <ProgramElement>
      <Code>8283</Code>
      <Text>Exploiting Parallel&amp;Scalabilty</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7943</Code>
      <Text>PROGRAMMING LANGUAGES</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9251</Code>
      <Text>RES EXPER FOR UNDERGRAD-SUPPLT</Text>
    </ProgramReference>
  </Award>
</rootTag>
