<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>NeTS: Small: A Programmable Network Data Plane for Resource Management in Datacenters</AwardTitle>
    <AwardEffectiveDate>10/01/2015</AwardEffectiveDate>
    <AwardExpirationDate>09/30/2018</AwardExpirationDate>
    <AwardAmount>500000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division Of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Darleen L. Fisher</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Datacenters have revolutionized computing, allowing small companies and research groups to harness the power of tens of thousands of computers, and large companies to provide a wide range of services to billions of users. Research on datacenter network architectures is important to meet the stringent performance requirements of many applications at acceptable cost. A key aspect of modern datacenter networks is their use of sophisticated resource management algorithms within the network, without which it would be prohibitively expensive or even impossible to accomplish many data-intensive computing tasks. Researchers, engineers, and network operators have been developing new methods for resource management at a healthy pace over the past two decades. Much of this work requires changes to network routers, whose data planes are typically implemented in hardware. Hardware is inflexible, so researchers cannot convincingly demonstrate their new ideas, and operators cannot evaluate them in practice. The two approaches available today for programmable networks---software routers and hardware routers with programmable elements---both have drawbacks. To date, software routers have failed to deliver on performance, being at least an order of magnitude slower than hardware, whereas programmable elements in hardware routers have not been able to provide a convenient platform to express most queue management, scheduling, and control algorithms. &lt;br/&gt;&lt;br/&gt;To address this problem, this proposal introduces Flexplane, a new way to architect a programmable network data plane capable of supporting a variety of resource management schemes. The goal is to support schemes specified in a high-level language like C++ as in a software simulator or a software router, but run them at hardware rates on real networks. The key idea is to use a centralized arbiter to emulate the behavior of an entire network with abstract packets, and reflect that behavior on to real packets sent by the endpoints over the actual network. With Flexplane, packets arrive at their destinations with the timings and headers that mimic on-path routers running the programmed schemes. &lt;br/&gt;&lt;br/&gt;Broader Impacts: Flexplane is of demonstrated interest to network infrastructure teams in companies like Facebook. The results of this research will directly benefit datacenters operated by companies like Facebook, Google, Microsoft, Amazon.com, and many other enterprises. The education plan includes the introduction of this research's findings into the undergraduate curriculum and offers undergraduates an opportunity to implement network protocols in a friendly programming environment, but have them run at high rates, a capability that was hitherto unavailable. The graduate-level education goals are to explore the limits of centralized arbitration and data-plane programmability. The course material will be made widely available through MIT OpenCourseWare and on the MITx MOOC.</AbstractNarration>
    <MinAmdLetterDate>08/17/2015</MinAmdLetterDate>
    <MaxAmdLetterDate>08/17/2015</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1526791</AwardID>
    <Investigator>
      <FirstName>Hari</FirstName>
      <LastName>Balakrishnan</LastName>
      <EmailAddress>hari@csail.mit.edu</EmailAddress>
      <StartDate>08/17/2015</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Massachusetts Institute of Technology</Name>
      <CityName>Cambridge</CityName>
      <ZipCode>021394301</ZipCode>
      <PhoneNumber>6172531000</PhoneNumber>
      <StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Massachusetts</StateName>
      <StateCode>MA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7363</Code>
      <Text>RES IN NETWORKING TECH &amp; SYS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
  </Award>
</rootTag>
