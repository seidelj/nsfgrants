<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>EAGER: Bringing Design Thinking into Developers' Coding Activities through an Architectural Tactic Recommender System</AwardTitle>
    <AwardEffectiveDate>07/01/2015</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2016</AwardExpirationDate>
    <AwardAmount>80000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>The success of any complex software-intensive system is highly dependent on the extent to which it addresses stakeholders' quality concerns such as reliability, availability, security and performance. Software architects utilize a rich set of proven and re-usable architectural solutions such as tactics and patterns to satisfy each specific quality attribute. The objective of this research project is to develop a novel tactic-recommender system that is trained through learning from the source code of thousands of open-source software systems.&lt;br/&gt;&lt;br/&gt;The project will include developing a set of novel big-data compatible architecture profilers that ?detect? and ?learn? architectural choices made by several developers across source codes of thousands of open-source systems. This knowledge is used to recommend architectural tactics fitting a new project. This represents a paradigm shift in utilizing automated techniques to bring design thinking into developers? daily coding activities. Unlike existing architecture design practices, which all involve a rigorous upfront analysis of the system's quality concerns, this research takes a bottom-up approach. It uses the latent domain topics in the source code and identifies not only architectural tactics/patterns missing in a given project but also recommends several high quality sample implementations of the tactics/patterns from open source software projects. The findings of this research will partially address the current gap between design and implementation. &lt;br/&gt;&lt;br/&gt;The broader impact of the work will be to improve the productivity of software development and to improve the quality and evolvability of software-intensive systems.</AbstractNarration>
    <MinAmdLetterDate>05/19/2015</MinAmdLetterDate>
    <MaxAmdLetterDate>05/19/2015</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1543176</AwardID>
    <Investigator>
      <FirstName>Mehdi</FirstName>
      <LastName>Mirakhorli</LastName>
      <EmailAddress>mehdi@se.rit.edu</EmailAddress>
      <StartDate>05/19/2015</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Rochester Institute of Tech</Name>
      <CityName>ROCHESTER</CityName>
      <ZipCode>146235603</ZipCode>
      <PhoneNumber>5854757987</PhoneNumber>
      <StreetAddress>1 LOMB MEMORIAL DR</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>New York</StateName>
      <StateCode>NY</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7916</Code>
      <Text>EAGER</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9251</Code>
      <Text>RES EXPER FOR UNDERGRAD-SUPPLT</Text>
    </ProgramReference>
  </Award>
</rootTag>
