<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF:SMALL:Pushing the Limits of Transparent Specialization</AwardTitle>
    <AwardEffectiveDate>06/15/2016</AwardEffectiveDate>
    <AwardExpirationDate>05/31/2019</AwardExpirationDate>
    <AwardAmount>400000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Tao Li</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>For many years, microprocessors took advantage of how Moore's Law (smaller successive generations of transistors) and the fact that they consumed less power to build better performing chips. Due to fundamental limitations it is no longer possible to cost-effectively make smaller transistors or significantly reduce their power consumption. This research project develops future microprocessors that are organized differently and more effectively using limited transistors to provide better chips. The main idea this research project explores is a way to tailor certain parts of a chip to certain tasks, thereby making each component very small and power-efficient. A program's execution moves from one such component to another, each being tuned for that phase of the program. The curriculum enhancements will provide students significant experience in designing hardware. This research will help steer microprocessor designs in novel ways to sustain performance improvements and help sustain information technology leadership.&lt;br/&gt;&lt;br/&gt;The specific approach taken by this research is a unique and novel form of specialization called: behavior specialized acceleration (BSA). This is a paradigm that exploits program behaviors and their inter-relationship to hardware microarchitecture. It is workload domain agnostic. Specializing for program behaviors is advantageous both because fewer accelerators can target a large variety of codes, and because these behaviors are typically analyzable by a compiler, meaning their use can be transparent from programmers. In particular the research will develop a chip organization that includes an ExoCore fabric and an Endocore fabric. The ExoCore fabric is a processor core organization that uses behavior specialization to transparently improve the execution of general-purpose workloads. The Endocore fabric employs different behavior specializations and attempts to support computationally-intensive domains using a single hardware architecture and well-defined software interfaces. This research develops mechanisms, an FPGA prototype of a family of ExoCore and EndoCore designs, their accompanying compiler, and detailed performance evaluation.</AbstractNarration>
    <MinAmdLetterDate>06/03/2016</MinAmdLetterDate>
    <MaxAmdLetterDate>06/03/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1618234</AwardID>
    <Investigator>
      <FirstName>Karthikeyan</FirstName>
      <LastName>Sankaralingam</LastName>
      <EmailAddress>karu@cs.wisc.edu</EmailAddress>
      <StartDate>06/03/2016</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Wisconsin-Madison</Name>
      <CityName>MADISON</CityName>
      <ZipCode>537151218</ZipCode>
      <PhoneNumber>6082623822</PhoneNumber>
      <StreetAddress>21 North Park Street</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Wisconsin</StateName>
      <StateCode>WI</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7941</Code>
      <Text>COMPUTER ARCHITECTURE</Text>
    </ProgramReference>
  </Award>
</rootTag>
