<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CSR: Small: Collaborative Research: Instruction Address Translation Revisited</AwardTitle>
    <AwardEffectiveDate>10/01/2016</AwardEffectiveDate>
    <AwardExpirationDate>09/30/2019</AwardExpirationDate>
    <AwardAmount>250000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division Of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Yan Solihin</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Applications continue to grow both in the size of their code and in the amount&lt;br/&gt;of data they access. Whether on mobile, desktop, or server platforms,&lt;br/&gt;applications are written in a modular fashion, relying heavily on common&lt;br/&gt;functionality provided by a large number of libraries. Modern operating&lt;br/&gt;systems leverage this commonality by sharing libraries across applications to&lt;br/&gt;avoid duplicate copies of instructions in memory. However, operating systems&lt;br/&gt;still maintain independent memory management (address translation) data&lt;br/&gt;for each process, consuming memory resources proportional to the number of&lt;br/&gt;simultaneously executing processes. The goal of this project is to enhance&lt;br/&gt;the efficiency of memory system access and management for shared code&lt;br/&gt;libraries. The success of these efforts will contribute to the long-term&lt;br/&gt;sustainability of the world's fast evolving digital economy and society,&lt;br/&gt;reducing computational waste and improving responsiveness. The education&lt;br/&gt;component will include improving classroom instruction by contributing new&lt;br/&gt;course modules as well as training graduate students in the importance of&lt;br/&gt;efficient sharing.&lt;br/&gt;&lt;br/&gt;This project involves designing novel hardware and software to promote&lt;br/&gt;efficient access to shared code in a multi-tasking environment, including: 1)&lt;br/&gt;new operating system memory management mechanisms and policies to eliminate&lt;br/&gt;duplication and minimize cache and translation lookaside buffer (TLB)&lt;br/&gt;footprint, examining the tradeoffs between the use of variable segments and&lt;br/&gt;hierarchical page tables; 2) reexamining the need for caching translations&lt;br/&gt;when utilizing emerging low-latency persistent memory; and 3) using available&lt;br/&gt;protection support for safe translation sharing in modern TLBs in addition to&lt;br/&gt;designing new hardware support to improve efficiency.</AbstractNarration>
    <MinAmdLetterDate>08/11/2016</MinAmdLetterDate>
    <MaxAmdLetterDate>08/11/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1618497</AwardID>
    <Investigator>
      <FirstName>Sandhya</FirstName>
      <LastName>Dwarkadas</LastName>
      <EmailAddress>sandhya@cs.rochester.edu</EmailAddress>
      <StartDate>08/11/2016</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Rochester</Name>
      <CityName>Rochester</CityName>
      <ZipCode>146270140</ZipCode>
      <PhoneNumber>5852754031</PhoneNumber>
      <StreetAddress>518 HYLAN, RC BOX 270140</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>New York</StateName>
      <StateCode>NY</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
  </Award>
</rootTag>
