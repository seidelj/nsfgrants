<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: A Mining-Based Approach for Consistent and Timely Adaptation of Component-Based Software</AwardTitle>
    <AwardEffectiveDate>07/01/2015</AwardEffectiveDate>
    <AwardExpirationDate>01/31/2018</AwardExpirationDate>
    <AwardAmount>310431</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Increasingly, software is expected to dynamically adapt its behavior in response to changing conditions in the computation infrastructure as well as the surrounding physical environment. Two important problems in dynamic adaptation of software are (1) how to prevent failure of the software during adaptation, and (2) how to reduce disruptions in the functionalities provisioned by the software. This research will devise a novel technique for dealing with these problems by automatically determining when is the best time for making changes to a running software system. The principles emerging from this research will provide the foundation for a new method of engineering dynamically adaptive software. The results of the research will be incorporated into education, such that tomorrow's software engineers are better equipped to tackle the challenges of constructing adaptive software. The approach will be realized via a suite of open source tools to pave the way for transitioning the research results to the industry. &lt;br/&gt;&lt;br/&gt;All prior techniques targeted at this research problem have assumed the availability of detailed software component dependency models. This research will develop a novel technique that solves this problem in settings where such models are either not available, difficult to build, or outdated due to the evolution of the software. The hypothesis guiding this research is that by monitoring a software system?s execution history (e.g., message exchanges, method invocations) for a sufficiently long period of time, it is possible to mine an accurate model of interactions and dependencies among the system's components. The research will demonstrate how models inferred in this way can be used to (1) ensure changes in the running software do not create inconsistencies that could jeopardize the system?s functionality, (2) control the level of disruption incurred in system?s operations due to adaptation, and (3) automatically adjust the models to changing dependencies among the potentially evolving software components.</AbstractNarration>
    <MinAmdLetterDate>08/05/2015</MinAmdLetterDate>
    <MaxAmdLetterDate>02/09/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1550206</AwardID>
    <Investigator>
      <FirstName>Sam</FirstName>
      <LastName>Malek</LastName>
      <EmailAddress>malek@uci.edu</EmailAddress>
      <StartDate>08/05/2015</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of California-Irvine</Name>
      <CityName>Irvine</CityName>
      <ZipCode>926173067</ZipCode>
      <PhoneNumber>9498244768</PhoneNumber>
      <StreetAddress>5171 California Avenue, Ste 150</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>California</StateName>
      <StateCode>CA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
  </Award>
</rootTag>
