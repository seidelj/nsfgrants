<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CSR: Small: Elastic and Robust Cloud Programming</AwardTitle>
    <AwardEffectiveDate>10/01/2016</AwardEffectiveDate>
    <AwardExpirationDate>09/30/2019</AwardExpirationDate>
    <AwardAmount>485504</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division Of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>M. Mimi McClure</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>The emergence of cloud computing is undoubtedly one of the major paradigm shifts of the last decade in information technology, and one with substantial economic impact. Indeed, the ability to rent computing resources on a need basis (as opposed to acquiring and managing infrastructure provisioned for peak work loads that may occur only rarely) supports many businesses of different kinds and sizes. However, while cloud infrastructures allow computing resources to be allocated and released very dynamically, developing software that leverages this potential to automatically adjust its usage of resources to its workload (e.g., the number of client connections) and performance goals at runtime is a hard task for software engineers. The goal of this project is thus to provide programmers support in the form of a programming model and runtime environment for developing such elastic applications. &lt;br/&gt;&lt;br/&gt;Devising such a generic programming model is however very challenging as it must reconcile simplicity (for programmers) with scalability (by facilitating parallelism and distribution) and robustness (by handling partial failures). Unfortunately, these properties may conflict. This project addresses the challenges through the following contributions. (1) Programming model and language: a novel object-oriented programming model variant called Atomic Events and Ownership Network (AEON) is proposed. AEON combines a simplified object model to reason about units of application state with a novel type of multiple ownership to streamline interaction between these units, and a novel notion of events for atomic client-server interaction. (2) Distributed runtime environment: a highly scalable and decentralized runtime environment for AEON is implemented, with support for dynamically adding and removing computational units, as well as for supporting the restructuring of their relationships without hampering consistency or conversely stalling progress. Heuristics to efficiently (re-)partition AEON applications are also proposed. (3) Resource management and fault tolerance: a resource management framework is leveraged for facilitating the mapping between application units and underlying resources; it is augmented to provide a notion of dependable resources achieving fault tolerance. (4) Evaluation: the developed support is evaluated on a wide variety of applications and across different cloud infrastructures. All developments are based on open-source software.</AbstractNarration>
    <MinAmdLetterDate>08/11/2016</MinAmdLetterDate>
    <MaxAmdLetterDate>03/03/2017</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1618923</AwardID>
    <Investigator>
      <FirstName>Patrick</FirstName>
      <LastName>Eugster</LastName>
      <EmailAddress>peugster@cs.purdue.edu</EmailAddress>
      <StartDate>03/03/2017</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Patrick</FirstName>
      <LastName>Eugster</LastName>
      <EmailAddress>peugster@cs.purdue.edu</EmailAddress>
      <StartDate>08/11/2016</StartDate>
      <EndDate>03/03/2017</EndDate>
      <RoleCode>Former Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Xiangyu</FirstName>
      <LastName>Zhang</LastName>
      <EmailAddress>xyzhang@cs.purdue.edu</EmailAddress>
      <StartDate>12/05/2016</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Srivatsan</FirstName>
      <LastName>Ravi</LastName>
      <EmailAddress>ravi17@purdue.edu</EmailAddress>
      <StartDate>12/05/2016</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Purdue University</Name>
      <CityName>West Lafayette</CityName>
      <ZipCode>479072114</ZipCode>
      <PhoneNumber>7654941055</PhoneNumber>
      <StreetAddress>Young Hall</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Indiana</StateName>
      <StateCode>IN</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
  </Award>
</rootTag>
