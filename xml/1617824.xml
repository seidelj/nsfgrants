<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CSR: Small: Architectural and Operating System Support for Non-volatile Memory</AwardTitle>
    <AwardEffectiveDate>09/01/2016</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2019</AwardExpirationDate>
    <AwardAmount>499059</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division Of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Yan Solihin</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Since the dawn of modern computing, the technologies used to build computer systems have stably partitioned into compute (manipulate data), memory (holds data while power is on), and storage (for retaining long-term data). Today a new class of technologies are emerging, namely non-volatile memory (NVM), that promises to disruptively merge the concepts of memory and storage. This work exploits the potential of this disruption by synergistically exploring software and hardware changes with a team led by a systems expert and architects with several foci. The work develops new benchmarks and- through analysis - new designs that enable future computer systems do more work at the same cost or the same work at less cost due to more effective access to NVM. Moreover, the project disseminates its NVM benchmarks and software tools to further the work of others and make NSF dollars more impactful. &lt;br/&gt;&lt;br/&gt;In more detail, the work develops and analyzes NVM benchmarks with dissimilar roots in file systems, persistent memory, and data stores. It then uses this analysis to develop computer NVM designs to hide latency while ensuring persistence, reduce the cost of coordinating with multiple memory controllers, transmutes ideas from general-purpose graphics processing units (GPUs) for NVM use, explores virtual memory address translation for vast NVMs, and facilitates fast atomic publication of data.</AbstractNarration>
    <MinAmdLetterDate>08/02/2016</MinAmdLetterDate>
    <MaxAmdLetterDate>08/02/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1617824</AwardID>
    <Investigator>
      <FirstName>David</FirstName>
      <LastName>Wood</LastName>
      <EmailAddress>david@cs.wisc.edu</EmailAddress>
      <StartDate>08/02/2016</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Mark</FirstName>
      <LastName>Hill</LastName>
      <EmailAddress>markhill@cs.wisc.edu</EmailAddress>
      <StartDate>08/02/2016</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Michael</FirstName>
      <LastName>Swift</LastName>
      <EmailAddress>swift@cs.wisc.edu</EmailAddress>
      <StartDate>08/02/2016</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Wisconsin-Madison</Name>
      <CityName>MADISON</CityName>
      <ZipCode>537151218</ZipCode>
      <PhoneNumber>6082623822</PhoneNumber>
      <StreetAddress>21 North Park Street</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Wisconsin</StateName>
      <StateCode>WI</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
  </Award>
</rootTag>
