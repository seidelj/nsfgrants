<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Practical Oblivious Computation</AwardTitle>
<AwardEffectiveDate>09/01/2015</AwardEffectiveDate>
<AwardExpirationDate>05/31/2020</AwardExpirationDate>
<AwardAmount>192134</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol J. Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>The explosion of digital data carries a wealth of opportunities. The ability to collect and mine data at scale continues to enable new applications and transform our lives. However, privacy concerns are seen as a major hurdle towards data sharing and analytics. This project develops a practical framework for "oblivious computation", which allows general computation over sensitive data, but without disclosing the data. &lt;br/&gt;&lt;br/&gt;The proposed work takes a combined algorithms and programming language lens. On the programming language side, the proposed work designs friendly programming abstractions that facilitate the compilation of programs into efficient, oblivious representations. On the algorithms side, the proposed work designs efficient oblivious algorithms for a wide characterization of realistic tasks. The resulting framework, ObliVM, allows non-expert developers to write programs much as they do today, and ObliVM automatically generates the corresponding oblivious computation implementation. ObliVM supports several different architectures for implementing oblivious computation, including those based on trusted hardware and those based on cryptographic secure computation. ObliVM offers a unified programming framework such that a developer can write a program irrespective of the backend architecture -- through a universal intermediate representation, this program can be compiled to either a trusted hardware-based or a cryptography-based backend architecture. ObliVM can facilitate the deployment of oblivious computation in real-life scenarios, and allow businesses and individuals to monetize sensitive data without the risk of exposure.</AbstractNarration>
<MinAmdLetterDate>11/24/2015</MinAmdLetterDate>
<MaxAmdLetterDate>06/19/2016</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1601879</AwardID>
<Investigator>
<FirstName>Elaine</FirstName>
<LastName>Shi</LastName>
<EmailAddress>elaine@cs.cornell.edu</EmailAddress>
<StartDate>11/24/2015</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Cornell University</Name>
<CityName>Ithaca</CityName>
<ZipCode>148502820</ZipCode>
<PhoneNumber>6072555014</PhoneNumber>
<StreetAddress>373 Pine Tree Road</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
</Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER: FACULTY EARLY CAR DEV</Text>
</ProgramReference>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
</Award>
</rootTag>
