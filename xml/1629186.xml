<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAREER: Differential Types and Declarative Hypothesis Testing for Software Evolution</AwardTitle>
<AwardEffectiveDate>09/01/2015</AwardEffectiveDate>
<AwardExpirationDate>03/31/2018</AwardExpirationDate>
<AwardAmount>339219</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol J. Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Software continues to evolve long after the first version is released. Changes made to source code in the course of evolution might not have the intended semantics (fix bugs, add features), which negatively impacts both software producers and software consumers, and has high economic costs. More generally, the software evolution process is not very well understood.  To remedy this situation, this work will use information derived from analyzing software history in two ways. First, to develop a type systems-based approach named differential typing, that enables reasoning about the properties of source code before and after a change has been made, and reveals the semantics of source code changes at development time.  Second, to construct a framework for declarative hypothesis testing that automates and simplifies the process of conducting empirical studies in software evolution, and software engineering in general.&lt;br/&gt;&lt;br/&gt;The interdisciplinary foundation of this work will catalyze interaction between two primary communities, programming languages and software engineering.  The results of this research will lead to a better understanding of how software evolves, and to improvements in the software evolution process. By making the semantics of software changes explicit and revealing certain kinds of errors before software is deployed, the incidence of, and costs associated with, software bugs and incorrect software updates are reduced. The project will transform the way researchers conduct empirical software evolution studies by shifting the focus from how hypotheses are tested to what the right hypotheses are.  The contributions will be made publicly available, which will benefit not only the research community, but also the software development community. Ideas from this work will be incorporated into education, so that tomorrow's graduates are better prepared to tackle software evolution challenges.</AbstractNarration>
<MinAmdLetterDate>05/24/2016</MinAmdLetterDate>
<MaxAmdLetterDate>07/18/2016</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1629186</AwardID>
<Investigator>
<FirstName>Iulian</FirstName>
<LastName>Neamtiu</LastName>
<EmailAddress>ineamtiu@njit.edu</EmailAddress>
<StartDate>05/24/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>New Jersey Institute of Technology</Name>
<CityName>Newark</CityName>
<ZipCode>071021982</ZipCode>
<PhoneNumber>9735965275</PhoneNumber>
<StreetAddress>323 DOCTOR MARTIN LUTHER</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New Jersey</StateName>
<StateCode>NJ</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramElement>
<ProgramReference>
<Code>1045</Code>
<Text>CAREER: FACULTY EARLY CAR DEV</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
</Award>
</rootTag>
