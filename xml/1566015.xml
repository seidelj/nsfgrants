<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CRII: SHF: Optimal Interpolation for Efficient Proof Synthesis</AwardTitle>
    <AwardEffectiveDate>09/01/2016</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2018</AwardExpirationDate>
    <AwardAmount>175000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Nina Amla</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Software now dominates almost every aspect of our life: from wrist watches to the stock markets, and from thermostats to surgeons. And this proliferation is unlikely to slow down any time soon; in fact, it appears that we are merely witnessing the very beginning of the software revolution. Society is ever more reliant on highly complex and interconnected software systems, and this has made software safety, security, and privacy a first-class societal concern.&lt;br/&gt;&lt;br/&gt;To formally and mathematically reason about complex software systems, automated verification and program analysis techniques have proven powerful over the past decade, thanks to a plethora of advances in the area. However, most non-trivial programs and correctness properties of interest remain out of reach for automated verification techniques. The project investigates new automated software verification techniques and tools, that are more efficient and applicable to a wider range of programs and properties. Specifically, the project develops novel techniques for computing Craig interpolants, which are logical means for synthesizing proofs of correctness. The emphasis is on exploring the question of computing optimal interpolants---the simplest possible ones. The work is motivated by the observation that simpler interpolants are more likely to generalize to a proof of correctness. The goal of the project is to develop an algorithmic foundation for efficient verification of complex programs and correctness properties, thus expanding the applicability of formal verification techniques.</AbstractNarration>
    <MinAmdLetterDate>02/16/2016</MinAmdLetterDate>
    <MaxAmdLetterDate>02/16/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1566015</AwardID>
    <Investigator>
      <FirstName>Aws</FirstName>
      <LastName>Albarghouthi</LastName>
      <EmailAddress>aws@cs.wisc.edu</EmailAddress>
      <StartDate>02/16/2016</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Wisconsin-Madison</Name>
      <CityName>MADISON</CityName>
      <ZipCode>537151218</ZipCode>
      <PhoneNumber>6082623822</PhoneNumber>
      <StreetAddress>21 North Park Street</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Wisconsin</StateName>
      <StateCode>WI</StateCode>
    </Institution>
    <ProgramElement>
      <Code>026Y</Code>
      <Text>CRII CISE Research Initiation</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>8206</Code>
      <Text>Formal Methods and Verification</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>8228</Code>
      <Text>CISE Resrch Initiatn Initiatve</Text>
    </ProgramReference>
  </Award>
</rootTag>
