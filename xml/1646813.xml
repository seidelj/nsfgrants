<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: EAGER: Collaborative Research: Demonstrating the Feasibility of Automatic Program Repair Guided by Semantic Code Search</AwardTitle>
<AwardEffectiveDate>01/01/2016</AwardEffectiveDate>
<AwardExpirationDate>12/31/2016</AwardExpirationDate>
<AwardAmount>31346</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol J. Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Software is an integral part of our everyday lives, and our economy relies heavily on software working correctly. However, bugs in software cause security breaches, and cost our economy billions of dollars annually. While these high costs of bugs are well known, the software industry struggles to remedy the situation because the inherent complexity of the software makes bugs so common that new bugs are typically reported faster than developers can fix them.  The goal of this project is to develop a technique that fixes bugs&lt;br/&gt;automatically, greatly reducing the cost of fixing the bugs, improving quality of software, and reducing the negative effects on the economy and society.&lt;br/&gt;&lt;br/&gt;Because so much software has already been written, many subroutines, data structures, and algorithm implementations already exist as part of open-source software. Therefore, for many software bugs, there already exist subroutines, data structures, and algorithm implementations in other open-source software that implement the correct behavior and can be substituted into buggy systems to fix the bugs. This project verifies two key properties necessary to build such a bug fixing technique. First, the project attempts to validate the assumption that correct code candidates actually exist in open-source software code bases. Second, the project aims to demonstrate that semantic code search techniques can effectively find these code candidates, and that the gaps between the correct and incorrect versions can be bridged using automatic techniques. Altogether, this exploratory project is intended to establish the feasibility of automated bug fixing through semantic search of open-source software. The broader impact of this work is the advancement of techniques that improve software quality, which, in turn, reduces the negative economic and societal effects of software bugs.  This grant is exploratory work on an untested, but potentially transformative, research idea.</AbstractNarration>
<MinAmdLetterDate>07/15/2016</MinAmdLetterDate>
<MaxAmdLetterDate>07/15/2016</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1646813</AwardID>
<Investigator>
<FirstName>Kathryn</FirstName>
<LastName>Stolee</LastName>
<EmailAddress>ktstolee@ncsu.edu</EmailAddress>
<StartDate>07/15/2016</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>North Carolina State University</Name>
<CityName>RALEIGH</CityName>
<ZipCode>276957514</ZipCode>
<PhoneNumber>9195152444</PhoneNumber>
<StreetAddress>CAMPUS BOX 7514</StreetAddress>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramElement>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
</Award>
</rootTag>
