<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Medium: Collaborative Research: Semi and Fully Automated Program Repair and Synthesis via Semantic Code Search</AwardTitle>
    <AwardEffectiveDate>07/01/2016</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2020</AwardExpirationDate>
    <AwardAmount>97778</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Many aspects of our economy rely heavily on software working correctly. However, software errors are common, routinely cause security breaches, and cost our economy billions of dollars annually. Despite the well-known high costs of software errors, the software industry struggles to overcome this challenge, as new errors are reported faster than they can be fixed. Recent research has demonstrated the potential of automated program repair techniques to address this challenge. In this research, we develop new techniques to fix software errors and implement new features automatically. The challenge is to fix code while not breaking other functionality, and to work toward repairing code of increasing complexity.&lt;br/&gt;&lt;br/&gt;The approach takes advantage of the high availability of open-source code that already implements many functions required for a new software project. The approach is to search for relevant code in open-source projects, adapt that code to its new context using automated software repair and generation techniques, and then validate the changed software. A key component of the approach is semantic code search, which queries large databases of code to find code snippets that satisfy a behavioral specification. The project develops novel techniques that (1) encode large, searchable bodies of code as behavioral profiles, (2) localize bugs and features to code blocks, modules, and components, (3) extract the desired behavioral profiles of those blocks, modules, and components, (4) use the extracted profiles to search the database for potential patches, (5) adapt the potential patches to fit into the code context, and (6) validate the potential patches. The project focuses on producing high-quality code, verifying that the injected code does not break existing functionality. The broader impacts come mainly from goal of radically improving software productivity through reuse and adaptation of existing code.</AbstractNarration>
    <MinAmdLetterDate>07/13/2016</MinAmdLetterDate>
    <MaxAmdLetterDate>07/13/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1645136</AwardID>
    <Investigator>
      <FirstName>Kathryn</FirstName>
      <LastName>Stolee</LastName>
      <EmailAddress>ktstolee@ncsu.edu</EmailAddress>
      <StartDate>07/13/2016</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>North Carolina State University</Name>
      <CityName>RALEIGH</CityName>
      <ZipCode>276957514</ZipCode>
      <PhoneNumber>9195152444</PhoneNumber>
      <StreetAddress>CAMPUS BOX 7514</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>North Carolina</StateName>
      <StateCode>NC</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7924</Code>
      <Text>MEDIUM PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramReference>
  </Award>
</rootTag>
