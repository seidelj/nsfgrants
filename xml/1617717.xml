<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Semantics, Static Analysis, and Refencing of Concurrent Programs with Weak Memory Models</AwardTitle>
    <AwardEffectiveDate>09/01/2016</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2019</AwardExpirationDate>
    <AwardAmount>481399</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Nina Amla</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Modern computers have parallel multicore architectures sharing a&lt;br/&gt;hierarchy of caches and memories from fast and expensive ones to large&lt;br/&gt;and cheaper ones. The consequence is that not all cores running&lt;br/&gt;concurrently see the shared memory in the same way: some see newly&lt;br/&gt;stored values while others see older ones. This is called weak&lt;br/&gt;consistency models for shared memory on a single chip or memory&lt;br/&gt;distributed on several chips or on networks. This modern design makes &lt;br/&gt;the task of designing and programming parallel computers very complex. &lt;br/&gt;In particular the same program may have very different behaviors when running &lt;br/&gt;on different architectures whereas the same program had the same effect on all&lt;br/&gt;machines of the previous generation. &lt;br/&gt;&lt;br/&gt;This project define a generic formal semantics of parallel programs with weak &lt;br/&gt;consistency models parameterized by a formal definition of the computer &lt;br/&gt;architecture. Based on this parameterized semantics, the project investigates &lt;br/&gt;invariance proof methods to be used by programmers and verification tools to &lt;br/&gt;prove properties of parallel programs with weak consistency models. The project &lt;br/&gt;contributes to formal methods and tools for concurrent programming which, by &lt;br/&gt;the foreseeable evolution of hardware design, will be inevitable in the future.&lt;br/&gt;The publications and prototypes from this project are widely disseminated.</AbstractNarration>
    <MinAmdLetterDate>05/19/2016</MinAmdLetterDate>
    <MaxAmdLetterDate>05/19/2016</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1617717</AwardID>
    <Investigator>
      <FirstName>Patrick</FirstName>
      <LastName>Cousot</LastName>
      <EmailAddress>pcousot@cs.nyu.edu</EmailAddress>
      <StartDate>05/19/2016</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>New York University</Name>
      <CityName>NEW YORK</CityName>
      <ZipCode>100121019</ZipCode>
      <PhoneNumber>2129982121</PhoneNumber>
      <StreetAddress>70 WASHINGTON SQUARE S</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>New York</StateName>
      <StateCode>NY</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7923</Code>
      <Text>SMALL PROJECT</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>8206</Code>
      <Text>Formal Methods and Verification</Text>
    </ProgramReference>
  </Award>
</rootTag>
