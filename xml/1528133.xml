<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Compiler Validation via Equivalence Modulo Inputs</AwardTitle>
    <AwardEffectiveDate>09/01/2015</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2018</AwardExpirationDate>
    <AwardAmount>500000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Anindya Banerjee</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Title: SHF:Small:Compiler Validation via Equivalence Modulo Input&lt;br/&gt;&lt;br/&gt;Compilers are among the most widely-used and complex software systems ever written; they are the trusted foundation for building other software. Perhaps less known is that production compilers also frequently contain bugs, which frustrate programmers and may lead to mysterious program failures and disasters. Compiler validation is both scientifically and technically challenging. The intellectual merits of this project are novel methodologies and practical techniques for validating production compilers. The project's broader significance and importance are improved reliability and usability of modern compilers. It also indirectly improves the quality of every piece of software upon which society increasingly depends.&lt;br/&gt;&lt;br/&gt;Technically, this project is centered around equivalent modulo input (EMI), a general concept and approach for validating compilers. A basic realization of EMI is effective and has discovered more than a hundred important bugs in widely-used compilers. This project builds on that success and focuses on three main directions: develop advanced strategies to realize EMI's full potential, test a compiler's diagnostic support and performance, and generalize techniques toward testing C++ and OpenMP compilers. The project aims to significantly advance our knowledge and state-of-the-art practices on validating and engineering reliable and usable compilers.</AbstractNarration>
    <MinAmdLetterDate>07/13/2015</MinAmdLetterDate>
    <MaxAmdLetterDate>07/13/2015</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1528133</AwardID>
    <Investigator>
      <FirstName>Zhendong</FirstName>
      <LastName>Su</LastName>
      <EmailAddress>su@cs.ucdavis.edu</EmailAddress>
      <StartDate>07/13/2015</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Chengnian</FirstName>
      <LastName>sun</LastName>
      <EmailAddress>cnsun@ucdavis.edu</EmailAddress>
      <StartDate>07/13/2015</StartDate>
      <EndDate/>
      <RoleCode>Co-Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of California-Davis</Name>
      <CityName>Davis</CityName>
      <ZipCode>956186134</ZipCode>
      <PhoneNumber>5307547700</PhoneNumber>
      <StreetAddress>OR/Sponsored Programs</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>California</StateName>
      <StateCode>CA</StateCode>
    </Institution>
  </Award>
</rootTag>
